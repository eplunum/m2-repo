<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.eplunum.kernel</groupId>
    <artifactId>kernel</artifactId>
    <version>0.1a.1</version>
  </parent>
  <artifactId>eplunum-kernel</artifactId>
  <packaging>war</packaging>
  <name>ePlunum Kernel WAR</name>
  <description>WAR packaging of the ePlunum Kernel including the REST API</description>

  <properties>
    <!-- <cobertura.skip>true</cobertura.skip> -->
    <rootDir>${basedir}/..</rootDir>
  </properties>

  <dependencies>

    <!-- The ePlunum Kernel itself -->
    <dependency>
      <groupId>com.eplunum.kernel</groupId>
      <artifactId>kernel-impl</artifactId>
    </dependency>

    <dependency>
      <groupId>com.eplunum.extras</groupId>
      <artifactId>test-utils</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.eplunum.extensions</groupId>
      <artifactId>lang-javascript</artifactId>
    </dependency>
    <dependency>
      <groupId>com.eplunum.extensions</groupId>
      <artifactId>lang-common</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.ext</groupId>
      <artifactId>jersey-spring3</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/*.properties</exclude>
        </excludes>
      </resource>
    </resources>

    <plugins>

      <!-- Copy the final WAR to the docker folder to be containerized -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>package</phase>
            <configuration>
              <tasks>
                <copy file="target/${project.build.finalName}.war" tofile="../../docker/demo/war/eplunum.war"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>../../docker/demo/war</directory>
              <includes>
                <include>**/*.war</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>coverage-check</id>
            <phase></phase>
            <goals></goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <configuration>
          <path>/eplunum</path>
          <systemProperties>
            <log4j.configuration>sample-config/tomcat-run-log4j.xml</log4j.configuration>
          </systemProperties>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>